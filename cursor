#!/usr/bin/env python3
#  Copyright (c) 2025 Göksel Küçükşahin Use of this source code is governed by the MIT license that can be found in the LICENSE file.

import os
import sys
import subprocess

RUN_PATH = '/Applications/Cursor.app'

def print_usage(cmd):
    print(('Usage:\n' +
           '  {0} -h | -? | --help\n' +
           '  {0} [project_dir] [-w|--wait]\n' +
           '  {0} [-l|--line line] [project_dir|--temp-project] [-w|--wait] file[:line]\n' +
           '  {0} diff <left> <right>\n' +
           '  {0} merge <local> <remote> [base] <merged>').format(cmd))

def process_args(argv):
    args = []

    skip_next = False
    for i, arg in enumerate(argv[1:]):
        if arg == '-h' or arg == '-?' or arg == '--help':
            print_usage(argv[0])
            exit(0)
        elif i == 0 and (arg == 'diff' or arg == 'merge' or arg == '--temp-project'):
            args.append(arg)
        elif arg == '-l' or arg == '--line':
            args.append(arg)
            skip_next = True
        elif arg == '-w' or arg == '--wait':
            args.append('--wait')
        elif skip_next:
            args.append(arg)
            skip_next = False
        else:
            path = arg
            if ':' in arg:
                file_path, line_number = arg.rsplit(':', 1)
                if line_number.isdigit():
                    args.append('-l')
                    args.append(line_number)
                    path = file_path
            args.append(os.path.abspath(path))

    return args

def start_new_instance(args):
    if sys.platform == 'darwin':
        if len(args) > 0:
            args.insert(0, '--args')
        if '--wait' in args:
            args.insert(0, '-W')
        subprocess.run(['open', '-na', RUN_PATH] + args)
    else:
        bin_file = os.path.split(RUN_PATH)[1]
        subprocess.run([RUN_PATH, bin_file] + args)


cursor_args = process_args(sys.argv)

start_new_instance(cursor_args)